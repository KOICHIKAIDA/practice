package SkillCheck.C;

import java.util.Scanner;

public class C102 {
	// あなたは 2 つのバンド A, B のライブに行きたいと思っています。
	// 全てのライブに行こうと思っていますが、31 日まである今月は、2 つのバンドのライブが被っている日と被っていない日があります。
	//
	// そこで、ライブの日付が被っていない日は、ライブがある方のバンドのライブに行くことにし、日付が被った日は、バンド A からバンド A のライブとバンド B のライブを交互に行くことにしました。
	// バンド A, Bのライブの日程が与えられるので、今月の i 日目 (1 ≦ i ≦ 31) にバンド A とバンド B のいずれのライブに行くかを表す文字列を出力してください。
	//
	//
	// 入力例 1 の場合、バンド A のライブは 6 日、バンド B のライブは 5 日あります。
	// まず、12 日目はバンド A, B 両方のライブが入っています。
	// 今月最初のライブが被っている日なので、12 日目はバンド A のライブに行くことになります。
	//
	// 13 日目は、バンド B のライブしかないので、バンド B のライブに行くことになります。
	//
	// 14 日目は、ライブが被っており、前回、ライブが被った 12 日目は、バンド A のライブに行くことになっているので、バンド B のライブに行くことになります。
	// 同様に、15 日目も被っているので、15 日目はバンド A のライブに行くことになります。
	//
	//
	// 入力される値
	//
//	     入力は以下のフォーマットで与えられます。
	//
//	     M
//	     a_1
//	     a_2
//	     ...
//	     a_M
//	     N
//	     b_1
//	     b_2
//	     ...
//	     b_N
	//
	// ・1 行目に A のライブ日数を表す整数 M が与えられます。
	// ・続く M 行のうちの i 行目 (1 ≦ i ≦ M) には、バンド A の i 番目のライブの日を表す整数 a_i (1 ≦ a_i ≦ 31) が与えられます。
	// ・続く 1 行には B のライブ日数を表す整数 N が与えられます。
	// ・続く N 行のうちの i 行目 (1 ≦ i ≦ N) には、バンド B の i 番目のライブの日を表す整数 b_i (1 ≦ b_i ≦ 31) が与えられます。
	// ・入力は合計で M + 1 + N + 1 行となり、入力値最終行の末尾に改行が 1 つ入ります。
	//
	//
	// 期待する出力
	//
//	     a_1
//	     a_2
//	     ...
//	     a_31
	//
	// ・期待する出力は 31 行からなります。
	// ・ 行目 (1 ≦ i ≦ 31) にはそれぞれ今月の i 日目にバンド A とバンド B のいずれのライブに行くかを表す文字列を出力してください。
	// 　・バンド A のライブに行く場合は、大文字アルファベットの "A" を出力してください。
	// 　・バンド B のライブに行く場合は、大文字アルファベットの "B" を出力してください。
	// 　・ライブがない場合小文字アルファベットの "x" を出力してください。
	// ・ 出力最終行の末尾に改行を入れ、余計な文字、空行を含んではいけません。
	//
	//
	// 入力例1
	//
	// 6
	// 12
	// 14
	// 15
	// 26
	// 27
	// 28
	// 5
	// 12
	// 13
	// 14
	// 15
	// 27
	//
	// 出力例1
	//
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// A
	// B
	// B
	// A
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// x
	// A
	// B
	// A
	// x
	// x
	// x
	  public static void main(String[] args) {
		    Scanner sc = new Scanner(System.in);
		    int M = sc.nextInt();
		    int a[] = new int[M];

		    for (int i = 0; i < M; i++) {
		    	a[i] = sc.nextInt();
		    }

		    int N = sc.nextInt();
		    int b[] = new int[N];

		    for (int i = 0; i < N; i++) {
		    	b[i] = sc.nextInt();
		    }

		    // 初期化
		    String cal[] = new String[31];
		    for (int i = 0; i < cal.length; i++) {
		    	cal[i] = "x";
		    }

		    // Aのコンサート予定日
		    for (int j = 0; j < a.length; j++) {
		    	cal[a[j] - 1] = "A";
		    }

		    // Bのコンサート予定日
		    for (int j = 0; j < b.length; j++) {
		    	if (cal[b[j] - 1].equals("A")) {
		    		cal[b[j] - 1] = cal[b[j] - 1] + "B";
		    	} else {
			    	cal[b[j] - 1] = "B";
		    	}
		    }

		    boolean abFlg = true;
		    for (int i = 0; i < cal.length; i++) {
		    	if (cal[i].equals("AB")) {
		    		if(abFlg) {
		    			cal[i] = "A";
		    		} else {
		    			cal[i] = "B";
		    		}
			    	abFlg = !abFlg;
		    	}
		    }

		    for (int i = 0; i < cal.length; i++) {
		    	System.out.println(cal[i]);
		    }
	  }

}
